function vector fbm(vector p; vector shift; float time; float rad) {
    vector4 pos = set(p.x, p.y, p.z, time);
    vector v = set(0);
    float a = 0.5;
    matrix mat = ident();
    float radius = rad;

    int octave = chi("Octave");
    for (int i = 0; i < octave; ++i) {
        v += a * noise(pos * 0.5);

        rotate(mat, radius, normalize(v));

        pos = mat * pos * 2.0 + shift;
        pos.w = time * .9;

        a *= .55;
        radius *= .8;
    }
    return v;
}

vector gumbelNoise(vector vec) {
    return -log(-log(vec));
}

function vector domainWarping(vector p; float time) {
    vector pos = p;

    vector fbm1 = fbm(
                pos,
                set(1, 1, 1) * chf("fbm1_Shift_Scale"),
                time * chf("fbm1_Time_Scale"),
                chf("fbm1_Radius_Scale")
            );

    vector fbm2 = gumbelNoise(fbm(
            fbm1 + pos,
            fbm1 * chf("fbm2_Shift_Scale"),
            time * chf("fbm2_Time_Scale"),
            fbm1.x * chf("fbm2_Radius_Scale"))
        );

    vector fbm3 = gumbelNoise(fbm(
            fbm2 + pos,
            fbm2 * chf("fbm3_Shift_Scale"),
            time * chf("fbm3_Time_Scale"),
            fbm2.x * chf("fbm3_Radius_Scale"))
        );

    return fbm3;
}

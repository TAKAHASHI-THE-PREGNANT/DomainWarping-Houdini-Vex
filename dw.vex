function vector fbm(vector p; vector shift; float shiftSpeed; float rad) {
    // vector pos = set(p.x, p.y, p.z);
    vector4 pos = set(p.x, p.y, p.z, shiftSpeed);
    vector v = set(0);
    float a = 0.5;
    matrix mat = ident();
    float radius = rad;

    int octave = 7;
    for (int i = 0; i < octave; ++i) {
        v += a * noise(pos * 0.5);

        rotate(mat, radius, normalize(v));

        pos = mat * pos * 2.0 + shift;
        a *= .5;
    }
    return v;
}

vector gumbelNoise(vector vec) {
    return -log(-log(vec));
}

function vector domainWarping(vector p; float time) {
    vector4 pos = p;

    vector4 fbm1 = fbm(pos, set(.1, .1, .1), 0.1 * time, 0.5);

    vector4 fbm2 = gumbelNoise(fbm(
            fbm1 + pos,
            fbm1 * 0.59,
            0.1 * time,
            fbm1.x * 0.01)
        );

    vector4 fbm3 = gumbelNoise(fbm(
            fbm2 + pos,
            fbm2 * 0.58,
            0.12 * time,
            fbm2.x * 0.02)
        );

    return fbm3;
}
